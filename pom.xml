<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--
      -maven项目核心配置文件-
    Project name(项目名称)：java设计模式_自定义Spring框架
    Author(作者）: mao
    Author QQ：1296193245
    GitHub：https://github.com/maomao124/
    Date(创建日期)： 2022/8/24
    Time(创建时间)： 20:42
    -->
    <groupId>org.example</groupId>
    <artifactId>java_design_patterns_custom_spring_framework</artifactId>
    <!--更改项，不能有中文，名称-->
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>16</maven.compiler.source>
        <maven.compiler.target>16</maven.compiler.target>
    </properties>
    <!--依赖包配置放入位置-->
    <dependencies>
        <!--Spring核心基础依赖-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>5.3.16</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>5.3.16</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>5.3.16</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>5.3.16</version>
        </dependency>
        <!--spring注解，初始化回调方法和销毁回调方法注解-->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.0.0</version>
        </dependency>
        <!--注解实现Spring自动装配-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>5.3.16</version>
        </dependency>
        <!--spring-aspects-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>5.3.16</version>
        </dependency>
        <!--日志相关-->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>

        <!--dom4j依赖 解析xml文件-->
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>2.1.3</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>java设计模式_自定义Spring框架</finalName>
        <!--更改项，也可以不改，打包的jar文件名称-->
        <plugins>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <!-- 此处指定main方法入口的class -->
                            <mainClass>mao.customize_use.UserController</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>assembly</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--可选模块，添加console_hide模式的jar文件，配合本人开发的jar文件启动器使用。使用实时模板，或者使用下面的-->
            <!--https://github.com/maomao124/run-jar-tool-3.0-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <echo message="*******************install-or-package*******************"/>
                                <mkdir dir="${basedir}/target/classes"/>
                                <!--创建文件夹-->
                                <copy todir="${project.build.directory}/classes" overwrite="true">
                                    <fileset dir="${project.build.directory}"
                                             erroronmissingdir="false">
                                        <include name="*.jar"/>
                                    </fileset>
                                </copy>

                                <move file="${project.build.directory}/classes/java设计模式_自定义Spring框架.jar"
                                      tofile="${project.build.directory}/java设计模式_自定义Spring框架_hide.jar"/>

                                <copy todir="${project.build.directory}/classes" overwrite="true">
                                    <fileset dir="${project.build.directory}"
                                             erroronmissingdir="false">
                                        <include name="*.jar"/>
                                    </fileset>
                                </copy>

                                <move file="${project.build.directory}/classes/java设计模式_自定义Spring框架.jar"
                                      tofile="${project.build.directory}/java设计模式_自定义Spring框架_args.jar"/>

                                <move file="${project.build.directory}/classes/java设计模式_自定义Spring框架_hide.jar"
                                      tofile="${project.build.directory}/java设计模式_自定义Spring框架_args_save.jar"/>
                                <!--替换的名称-->

                                <!--jar包备份-->
                                <copy todir="H:/jar包/" overwrite="true">
                                    <fileset dir="${project.build.directory}"
                                             erroronmissingdir="false">
                                        <include name="*.jar"/>
                                    </fileset>
                                </copy>

                                <copy todir="${project.build.directory}/" overwrite="true">
                                    <fileset dir="H:/jar包/"
                                             erroronmissingdir="false">
                                        <include name="*.bat"/>
                                    </fileset>
                                </copy>

                                <copy todir="${project.build.directory}/" overwrite="true">
                                    <fileset dir="H:/jar包/"
                                             erroronmissingdir="false">
                                        <include name="jar启动器.7z"/>
                                    </fileset>
                                </copy>

                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean</id>
                        <phase>clean</phase>
                        <configuration>
                            <target>
                                <echo message="*******************clean*******************"/>
                                <delete dir="target"/>
                                <mkdir dir="${basedir}/target/classes"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!--必须去除{project.build.directory}和{basedir}前面的空格-->
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <echo message="*******************install-or-package*******************"/>
                                <mkdir dir="$ {basedir}/target/classes"/>

                                <copy todir="$ {project.build.directory}/classes" overwrite="true">
                                    <fileset dir="$ {project.build.directory}"
                                             erroronmissingdir="false">
                                        <include name="*.jar"/>
                                    </fileset>
                                </copy>

                                <move file="$ {project.build.directory}/classes/java设计模式_自定义Spring框架.jar"
                                      tofile="$ {project.build.directory}/java设计模式_自定义Spring框架_hide.jar"/>
                                      
                                <copy todir="$PROJECT.BUILD.DIRECTORY$/classes" overwrite="true">
                                    <fileset dir="$PROJECT.BUILD.DIRECTORY$"
                                             erroronmissingdir="false">
                                        <include name="*.jar"/>
                                    </fileset>
                                </copy>

                                <move file="$PROJECT.BUILD.DIRECTORY$/classes/java设计模式_自定义Spring框架.jar"
                                      tofile="$PROJECT.BUILD.DIRECTORY$/java设计模式_自定义Spring框架_args.jar"/>

                                <move file="$PROJECT.BUILD.DIRECTORY$/classes/java设计模式_自定义Spring框架_hide.jar"
                                      tofile="$PROJECT.BUILD.DIRECTORY$/java设计模式_自定义Spring框架_args_save.jar"/>

                                <copy todir="H:/jar包/" overwrite="true">
                                    <fileset dir="$ {project.build.directory}"
                                             erroronmissingdir="false">
                                        <include name="*.jar"/>
                                    </fileset>
                                </copy>
                                
                                <copy todir="$PROJECT.BUILD.DIRECTORY$/" overwrite="true">
                                    <fileset dir="H:/jar包/"
                                             erroronmissingdir="false">
                                        <include name="*.bat"/>
                                    </fileset>
                                </copy>

                                <copy todir="$PROJECT.BUILD.DIRECTORY$/" overwrite="true">
                                    <fileset dir="H:/jar包/"
                                             erroronmissingdir="false">
                                        <include name="jar启动器.7z"/>
                                    </fileset>
                                </copy>

                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean</id>
                        <phase>clean</phase>
                        <configuration>
                            <target>
                                <echo message="*******************clean*******************"/>
                                <delete dir="target"/>
                                <mkdir dir="$ {basedir}/target/classes"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>
    </build>

</project>